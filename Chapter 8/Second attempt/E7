 #include "std_lib_facilities.h"
 
 /*
 Read five names into a vector<string> name, then prompt the user for the
ages of the people named and store the ages in a vector<double> age. Then
print out the five (name[i],age[i]) pairs. Sort the names (sort(name.begin(),
name.end())) and print out the (name[i],age[i]) pairs. 
*/

// put user inputs in a vector
void user_input(vector<string>& names, vector<int>& ages)
{
	string name = " ";
	int age = 0;

	cout << "Please input five names.\n\n";
	for (int i = 0; i < 5; ++i) {
		cin >> name;
		names.push_back(name);
	}
	cout << endl;

	cout << "Please input the ages of the five names in the order of the names inputted above .\n\n";
	for (int i = 0; i < names.size(); ++i) {
		cin >> age;
		ages.push_back(age);
	}
	cout << endl;
}

// print the unsorted pair
void print_unsorted_pairs(const vector<string> n, const vector<int> a)
{
	for (int i = 0; i < n.size(); ++i) {
		cout << "(" << n[i] << ", " << a[i] << ")" << endl;
	}
}

// sort the name-age pait alphabetically
void sort_pairs(vector<string>& names_sort, vector<int>& ages_sort)
{
	vector<string> names = names_sort;
	vector<int> ages;
	
	sort(names_sort.begin(), names_sort.end());

	for (int i = 0; i < names.size(); ++i) {
		for (int j = 0; j < names.size(); ++j) {
			if (names_sort[i] == names[j]) {
				ages.push_back(ages_sort[j]);
			}
		}
	}

	for (int i = 0; i < names.size(); ++i) {
		cout << "(" << names_sort[i] << ", " << ages[i] << ")" << endl;
	}
}

int main()
{
	try {
		vector<string> names;
		vector<int> ages;

		user_input(names, ages);

		cout << "The unsorted name-value pairs are:\n\n";
		print_unsorted_pairs(names, ages);

		cout << endl;

		cout << "The sorted name-value pairs are:\n\n";
		sort_pairs(names, ages);

		return 0;
	}
	// e.what() extracts message from the runtime_error
	catch (runtime_error& e) {
		cerr << "\nruntime error: " << e.what() << "\n"; // cerr used for error outputs
		return 1;
	}
	// used to handle excpetions of any type whatsoever
	catch (...) {
		cerr << "\nSomething went wrong\n";
		return 2;
	}
}
