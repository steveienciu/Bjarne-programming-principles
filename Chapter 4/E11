/*
Create a program to find all the prime numbers between 1 and 100. One
way to do this is to write a function that will check if a number is prime
(i.e., see if the number can be divided by a prime number smaller than itself) using a vector of primes in order (so that if the vector is called
primes, primes[0]==2, primes[1]==3, primes[2]==5, etc.). Then write a
loop that goes from 1 to 100, checks each number to see if it is a prime,
and stores each prime found in a vector. Write another loop that lists the
prin1es you found. You might check your result by comparing your
vector of prime numbers with primes. Consider 2 the first prime.
*/

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

void error(string s) {
    throw runtime_error(s);
}

vector<int> prime;

bool is_prime(int n) {
    for (int p = 0; p < prime.size(); ++p)
        if (n % prime[p] == 0) // no remainder: prime[p] divided
            return false;
    return true;
}

int main() {
    prime.push_back(2); // consider the smallest prime
    for (int i = 3; i <= 100; ++i) // test all integers from 3 to 100
        if (is_prime(i))
            prime.push_back(i); // add new prime to vector
    cout << "Primes: \n";
    for (int p = 0; p < prime.size(); ++p)
        cout << prime[p] << "\n";
}
